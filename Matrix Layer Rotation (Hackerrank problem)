# problem detail: https://www.hackerrank.com/challenges/matrix-rotation-algo/problem

def rotate(matrix, m1, m2, n1, n2, k):
    for i in range(k):
        tem1 = matrix[m1][n1]
        for i in range(n1, n2):
            matrix[n1][i] = matrix[n1][i + 1]
        for i in range(m1, m2):
            matrix[i][n2] = matrix[i + 1][n2]
        for i in range(n2, n1, -1):
            matrix[m2][i] = matrix[m2][i - 1]
        for i in range(m2, m1, -1):
            matrix[i][n1] = matrix[i - 1][n1]
        matrix[m1 + 1][n1] = tem1


def matrixRotation(matrix, r):
    n = len(matrix[0])
    m = len(matrix)
    chain = min(n, m)//2
    for k in range(chain):
        chain_size = 2*(m+n-4*k-2)
        rotate(matrix, k, m-k-1, k, n-k-1, r%chain_size)   
    for i in range(m):
        for j in range(n):
            print(matrix[i][j], end=' ')
        print()


if __name__ == '__main__':
    mnr = input().rstrip().split()
    m = int(mnr[0])
    n = int(mnr[1])
    r = int(mnr[2])
    matrix = []
    for _ in range(m):
        matrix.append(list(map(int, input().rstrip().split())))
    matrixRotation(matrix, r)
